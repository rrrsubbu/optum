trigger:
- main  # Trigger the pipeline when code is pushed to the main branch

pool:
  vmImage: 'ubuntu-latest'  # Use an Ubuntu virtual machine

variables:
  # ACR details
  acrName: "optumacr"  # Replace with your ACR name
  imageName: "myapp"  # Replace with the name of your Docker image
  tag: "$(Build.BuildId)"  # Use the build ID as the image tag

steps:
# Step 1: Check out the code from the repository
- task: Checkout@v2
  displayName: 'Checkout source code'

# Step 2: Log in to Azure Container Registry (ACR)
- task: Docker@2
  displayName: 'Log in to ACR'
  inputs:
    containerRegistry: '$(acrName)'
    command: 'login'
- task: Docker@2
  inputs:
    containerRegistry: '$(acrName)'
    repository: '$(acrName).azurecr.io/$(imageName)'
    command: 'buildAndPush'
    Dockerfile: 'Dockerfile'
    tags: '$(tag)'

# Step 3: Build the Docker image
- task: Docker@2
  displayName: 'Build Docker image'
  inputs:
    containerRegistry: $(acrName)
    repository: '$(acrName).azurecr.io/$(imageName)'
    command: 'buildAndPush'
    Dockerfile: 'Dockerfile'  # Ensure you have a Dockerfile in the repo
    tags: |
      $(tag)

# Step 4: Deploy the image to Azure Web App (optional)
- task: AzureWebAppContainer@1
  displayName: 'Deploy image to Azure Web App'
  inputs:
    azureSubscription: '<your-azure-service-connection>'  # Replace with your Azure service connection
    appName: 'optum-app'  # Replace with your Azure Web App name
    containers: '$(acrName).azurecr.io/$(imageName):$(tag)'
